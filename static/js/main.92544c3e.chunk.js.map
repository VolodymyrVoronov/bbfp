{"version":3,"sources":["api/api.js","const.js","redux/actions/actionTypes.js","redux/actions/actions.js","redux/reducers/app.js","redux/reducers/rootReducer.js","redux/store.js","reportWebVitals.js","utils/getRandomBackgroundImage.js","assets/bg-images-start-page/bg-image-1.jpg","assets/bg-images-start-page/bg-image-2.jpg","assets/bg-images-start-page/bg-image-3.jpg","assets/bg-images-start-page/bg-image-4.jpg","assets/bg-images-start-page/bg-image-5.jpg","assets/bg-images-start-page/bg-image-6.jpg","assets/bg-images-start-page/bg-image-7.jpg","assets/bg-images-start-page/bg-image-8.jpg","assets/bg-images-start-page/bg-image-9.jpg","assets/bg-images-start-page/bg-image-10.jpg","assets/bg-images-start-page/bg-image-11.jpg","assets/bg-images-start-page/bg-image-12.jpg","components/StartPage/StartPage.jsx","components/HeaderNav/HeaderNav.jsx","components/InformationAboutPortal/InformationAboutPortal.jsx","components/UI/Preloader/Preloader.jsx","components/RandomCharacter/RandomCharacter.jsx","components/AllCharacters/AllCharacters.jsx","components/SearchResult/SearchResult.jsx","components/UI/NothingFound/NothingFound.jsx","components/FindACharacter/FindACharacter.jsx","components/Episodes/Episodes.jsx","components/QuotesFilter/QuotesFilter.jsx","components/Quotes/Quotes.jsx","components/MainPage/MainPage.jsx","components/App/App.jsx","index.jsx"],"names":["instanceAPI","axios","baseURL","appAPI","get","searchedCharacter","SET_START_PAGE_CLICKED","SET_NAV_CLICKED","GET_RANDOM_CHARACTER","IS_RANDOM_CHARACTER_LOADING","GET_ALL_CHARACTERS","GET_SEARCHED_CHARACTER","IS_SEARCHING","GET_ALL_EPISODES","GET_RANDOM_QUOTE","IS_RANDOM_QUOTE_LOADING","GET_ALL_QUOTES","IS_START_DATA_LODING","SET_ACTIVE_FILTER_BUTTON_INDEX","GET_FILTERED_QUOTES","SET_ALL_QUOTES","getRandomCharacterAC","randomCharacter","type","isRandomCharacterLoadingAC","isRandomCharacterLoading","getSearchedCharacterAC","isSearchingAC","isSearching","getRandomQuoteAC","randomQuote","isRandomQuoteLoadingAC","isRandomQuoteLoading","isStartDataLoadingAC","isStartDataLoading","setActiveFilterButtonIndexAC","activeFilterButtonIndex","initialState","isStartPageClicked","isNavClicked","allCharacters","allEpisodes","quotes","filteredQuotes","appReducer","state","action","filter","episode","series","quote","author","character","rootReducer","combineReducers","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","images","getRandomBackgroundImage","params","itemsArray","Math","floor","random","length","StartPage","props","dispatch","useDispatch","history","useHistory","backGroundImage","className","style","backgroundImage","onClick","a","responseRandomCharacter","status","data","responseAllCharaters","responseAllEpisodes","responseRandomQuote","responseAllQuotes","console","log","push","HeaderNav","React","memo","prosp","to","activeClassName","InformationAboutPortal","Preloader","RandomCharacter","useSelector","appearance","img","name","nickname","occupation","portrayed","Fragment","join","response","AllCharacters","useState","maxRange","setMaxRange","isLoading","setIsLoading","onLoadMoreBtnClickHandler","useCallback","setTimeout","prevRange","characterComponent","slice","map","birthday","char_id","SearchResult","showMoreInfo","setShowMoreInfo","nodeRef","useRef","cascade","CSSTransition","in","timeout","classNames","enter","enterActive","exit","exitActive","exitDone","unmountOnExit","mountOnEnter","ref","NothingFound","FindACharacter","searchedCharacterItem","setSearchedCharacter","disabled","setDisabled","onChange","e","target","value","trim","onInputFiledChangeHandler","placeholder","getSearchedCharacter","Episodes","episodesComponent","episodeItem","title","air_date","season","characters","episode_id","QuotesFilter","onFilterButtonClickHandler","index","getFilteredQuotesAC","authorsOfQuotes","Quotes","Set","quoteItem","lang","getQuotes","quote_id","MainPage","exact","from","component","path","App","widthOfTheScreen","innerWidth","document","documentElement","clientWidth","body","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.92544c3e.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nimport { bbAPI } from \"./../const\";\r\n\r\nconst instanceAPI = axios.create({\r\n  baseURL: bbAPI,\r\n});\r\n\r\nexport const appAPI = {\r\n  getRandomCharacter() {\r\n    return instanceAPI.get(`character/random`);\r\n  },\r\n\r\n  getAllCharaters() {\r\n    return instanceAPI.get(`characters`);\r\n  },\r\n\r\n  getSearchedCharacter(searchedCharacter) {\r\n    return instanceAPI.get(`characters?name=${searchedCharacter}`);\r\n  },\r\n\r\n  getAllEpisodes() {\r\n    return instanceAPI.get(`episodes`);\r\n  },\r\n\r\n  getRandomQuote() {\r\n    return instanceAPI.get(`quote/random`);\r\n  },\r\n\r\n  getAllQuotes() {\r\n    return instanceAPI.get(`quotes`);\r\n  },\r\n};\r\n","export const bbAPI = `https://www.breakingbadapi.com/api/`;\r\n","export const SET_START_PAGE_CLICKED = `SET_START_PAGE_CLICKED`;\r\nexport const SET_NAV_CLICKED = `SET_NAV_CLICKED`;\r\nexport const GET_RANDOM_CHARACTER = `GET_RANDOM_CHARACTER`;\r\nexport const IS_RANDOM_CHARACTER_LOADING = `IS_RANDOM_CHARACTER_LOADING`;\r\nexport const GET_ALL_CHARACTERS = `GET_ALL_CHARACTERS`;\r\nexport const GET_SEARCHED_CHARACTER = `GET_SEARCHED_CHARACTER`;\r\nexport const IS_SEARCHING = `IS_SEARCHING`;\r\nexport const GET_ALL_EPISODES = `GET_ALL_EPISODES`;\r\nexport const GET_RANDOM_QUOTE = `GET_RANDOM_QUOTE`;\r\nexport const IS_RANDOM_QUOTE_LOADING = `IS_RANDOM_QUOTE_LOADING`;\r\nexport const GET_ALL_QUOTES = `GET_ALL_QUOTES`;\r\nexport const IS_START_DATA_LODING = `IS_START_DATA_LODING`;\r\nexport const SET_ACTIVE_FILTER_BUTTON_INDEX = `SET_ACTIVE_FILTER_BUTTON_INDEX`;\r\nexport const GET_FILTERED_QUOTES = `GET_FILTERED_QUOTES`;\r\nexport const SET_ALL_QUOTES = `SET_ALL_QUOTES`;\r\n","import {\r\n  SET_START_PAGE_CLICKED,\r\n  GET_RANDOM_CHARACTER,\r\n  SET_NAV_CLICKED,\r\n  IS_RANDOM_CHARACTER_LOADING,\r\n  GET_ALL_CHARACTERS,\r\n  GET_SEARCHED_CHARACTER,\r\n  IS_SEARCHING,\r\n  GET_ALL_EPISODES,\r\n  GET_RANDOM_QUOTE,\r\n  IS_RANDOM_QUOTE_LOADING,\r\n  GET_ALL_QUOTES,\r\n  IS_START_DATA_LODING,\r\n  SET_ACTIVE_FILTER_BUTTON_INDEX,\r\n  GET_FILTERED_QUOTES,\r\n  SET_ALL_QUOTES,\r\n} from \"./actionTypes\";\r\n\r\nexport const setStartPageClickedAC = () => ({\r\n  type: SET_START_PAGE_CLICKED,\r\n});\r\n\r\nexport const setNavClickedAC = () => ({\r\n  type: SET_NAV_CLICKED,\r\n});\r\n\r\nexport const getRandomCharacterAC = (randomCharacter) => ({\r\n  type: GET_RANDOM_CHARACTER,\r\n  randomCharacter,\r\n});\r\n\r\nexport const isRandomCharacterLoadingAC = (isRandomCharacterLoading) => ({\r\n  type: IS_RANDOM_CHARACTER_LOADING,\r\n  isRandomCharacterLoading,\r\n});\r\n\r\nexport const getAllCharactersAC = (allCharacters) => ({\r\n  type: GET_ALL_CHARACTERS,\r\n  allCharacters,\r\n});\r\n\r\nexport const getSearchedCharacterAC = (searchedCharacter) => ({\r\n  type: GET_SEARCHED_CHARACTER,\r\n  searchedCharacter,\r\n});\r\n\r\nexport const isSearchingAC = (isSearching) => ({\r\n  type: IS_SEARCHING,\r\n  isSearching,\r\n});\r\n\r\nexport const getAllEpisodesAC = (allEpisodes) => ({\r\n  type: GET_ALL_EPISODES,\r\n  allEpisodes,\r\n});\r\n\r\nexport const getRandomQuoteAC = (randomQuote) => ({\r\n  type: GET_RANDOM_QUOTE,\r\n  randomQuote,\r\n});\r\n\r\nexport const isRandomQuoteLoadingAC = (isRandomQuoteLoading) => ({\r\n  type: IS_RANDOM_QUOTE_LOADING,\r\n  isRandomQuoteLoading,\r\n});\r\n\r\nexport const getAllQuotesAC = (quotes) => ({\r\n  type: GET_ALL_QUOTES,\r\n  quotes,\r\n});\r\n\r\nexport const isStartDataLoadingAC = (isStartDataLoading) => ({\r\n  type: IS_START_DATA_LODING,\r\n  isStartDataLoading,\r\n});\r\n\r\nexport const setActiveFilterButtonIndexAC = (activeFilterButtonIndex) => ({\r\n  type: SET_ACTIVE_FILTER_BUTTON_INDEX,\r\n  activeFilterButtonIndex,\r\n});\r\n\r\nexport const getFilteredQuotesAC = (character) => ({\r\n  type: GET_FILTERED_QUOTES,\r\n  character,\r\n});\r\n\r\nexport const setAllQuotesAC = () => ({\r\n  type: SET_ALL_QUOTES,\r\n});\r\n","import { appAPI } from \"./../../api/api\";\r\n\r\nimport {\r\n  getRandomCharacterAC,\r\n  isRandomCharacterLoadingAC,\r\n  getAllCharactersAC,\r\n  getSearchedCharacterAC,\r\n  isSearchingAC,\r\n  getAllEpisodesAC,\r\n  getRandomQuoteAC,\r\n  isRandomQuoteLoadingAC,\r\n  getAllQuotesAC,\r\n  isStartDataLoadingAC,\r\n} from \"../actions/actions\";\r\n\r\nimport {\r\n  SET_START_PAGE_CLICKED,\r\n  GET_RANDOM_CHARACTER,\r\n  SET_NAV_CLICKED,\r\n  IS_RANDOM_CHARACTER_LOADING,\r\n  GET_ALL_CHARACTERS,\r\n  GET_SEARCHED_CHARACTER,\r\n  IS_SEARCHING,\r\n  GET_ALL_EPISODES,\r\n  GET_RANDOM_QUOTE,\r\n  IS_RANDOM_QUOTE_LOADING,\r\n  GET_ALL_QUOTES,\r\n  IS_START_DATA_LODING,\r\n  SET_ACTIVE_FILTER_BUTTON_INDEX,\r\n  GET_FILTERED_QUOTES,\r\n  SET_ALL_QUOTES,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isStartPageClicked: false,\r\n  isNavClicked: false,\r\n  randomCharacter: [],\r\n  isRandomCharacterLoading: false,\r\n  allCharacters: [],\r\n  searchedCharacter: null,\r\n  isSearching: false,\r\n  allEpisodes: [],\r\n  randomQuote: [],\r\n  isRandomQuoteLoading: false,\r\n  quotes: [],\r\n  isStartDataLoading: false,\r\n  activeFilterButtonIndex: 0,\r\n  filteredQuotes: [],\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_START_PAGE_CLICKED:\r\n      return {\r\n        ...state,\r\n        isStartPageClicked: true,\r\n      };\r\n\r\n    case SET_NAV_CLICKED:\r\n      return {\r\n        ...state,\r\n        isNavClicked: true,\r\n      };\r\n\r\n    case GET_RANDOM_CHARACTER:\r\n      return {\r\n        ...state,\r\n        randomCharacter: action.randomCharacter,\r\n      };\r\n\r\n    case IS_RANDOM_CHARACTER_LOADING:\r\n      return {\r\n        ...state,\r\n        isRandomCharacterLoading: action.isRandomCharacterLoading,\r\n      };\r\n\r\n    case GET_ALL_CHARACTERS:\r\n      return {\r\n        ...state,\r\n        allCharacters: action.allCharacters,\r\n      };\r\n\r\n    case GET_SEARCHED_CHARACTER:\r\n      return {\r\n        ...state,\r\n        searchedCharacter: action.searchedCharacter,\r\n      };\r\n\r\n    case IS_SEARCHING:\r\n      return {\r\n        ...state,\r\n        isSearching: action.isSearching,\r\n      };\r\n\r\n    case GET_ALL_EPISODES:\r\n      return {\r\n        ...state,\r\n        allEpisodes: action.allEpisodes.filter(\r\n          (episode) => episode.series === `Breaking Bad`\r\n        ),\r\n      };\r\n\r\n    case GET_RANDOM_QUOTE:\r\n      return {\r\n        ...state,\r\n        randomQuote: action.randomQuote,\r\n      };\r\n\r\n    case IS_RANDOM_QUOTE_LOADING:\r\n      return {\r\n        ...state,\r\n        isRandomQuoteLoading: action.isRandomQuoteLoading,\r\n      };\r\n\r\n    case GET_ALL_QUOTES:\r\n      return {\r\n        ...state,\r\n        quotes: action.quotes.filter(\r\n          (quote) => quote.series === `Breaking Bad`\r\n        ),\r\n      };\r\n\r\n    case IS_START_DATA_LODING:\r\n      return {\r\n        ...state,\r\n        isStartDataLoading: action.isStartDataLoading,\r\n      };\r\n\r\n    case SET_ACTIVE_FILTER_BUTTON_INDEX:\r\n      return {\r\n        ...state,\r\n        activeFilterButtonIndex: action.activeFilterButtonIndex,\r\n      };\r\n\r\n    case GET_FILTERED_QUOTES:\r\n      return {\r\n        ...state,\r\n        filteredQuotes: state.quotes.filter(\r\n          (quote) => quote.author === action.character\r\n        ),\r\n      };\r\n\r\n    case SET_ALL_QUOTES:\r\n      return {\r\n        ...state,\r\n        filteredQuotes: [...state.quotes],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunks\r\nexport const getRandomCharacter = () => async (dispatch) => {\r\n  try {\r\n    dispatch(isRandomCharacterLoadingAC(true));\r\n    const response = await appAPI.getRandomCharacter();\r\n    if (response.status === 200) {\r\n      dispatch(getRandomCharacterAC(response.data[0]));\r\n      dispatch(isRandomCharacterLoadingAC(false));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getSearchedCharacter = (searchedCharacter) => async (dispatch) => {\r\n  try {\r\n    dispatch(isSearchingAC(true));\r\n    const response = await appAPI.getSearchedCharacter(searchedCharacter);\r\n    if (response.status === 200) {\r\n      dispatch(getSearchedCharacterAC(response.data));\r\n      dispatch(isSearchingAC(false));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getRandomQuote = () => async (dispatch) => {\r\n  try {\r\n    dispatch(isRandomQuoteLoadingAC(true));\r\n    const response = await appAPI.getRandomQuote();\r\n    if (response.status === 200) {\r\n      dispatch(getRandomQuoteAC(response.data));\r\n      dispatch(isRandomQuoteLoadingAC(false));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getStartData = () => async (dispatch) => {\r\n  try {\r\n    dispatch(isStartDataLoadingAC(true));\r\n\r\n    const responseRandomCharacter = await appAPI.getRandomCharacter();\r\n    if (responseRandomCharacter.status === 200) {\r\n      dispatch(getRandomCharacterAC(responseRandomCharacter.data[0]));\r\n    }\r\n    const responseAllCharaters = await appAPI.getAllCharaters();\r\n\r\n    if (responseAllCharaters.status === 200) {\r\n      dispatch(getAllCharactersAC(responseAllCharaters.data));\r\n    }\r\n\r\n    const responseAllEpisodes = await appAPI.getAllEpisodes();\r\n    if (responseAllEpisodes.status === 200) {\r\n      dispatch(getAllEpisodesAC(responseAllEpisodes.data));\r\n    }\r\n\r\n    const responseRandomQuote = await appAPI.getRandomQuote();\r\n    if (responseRandomQuote.status === 200) {\r\n      dispatch(getRandomQuoteAC(responseRandomQuote.data));\r\n    }\r\n\r\n    const responseAllQuotes = await appAPI.getAllQuotes();\r\n    if (responseAllQuotes.status === 200) {\r\n      dispatch(getAllQuotesAC(responseAllQuotes.data));\r\n    }\r\n\r\n    dispatch(isStartDataLoadingAC(false));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport app from \"./app\";\r\n\r\nconst rootReducer = combineReducers({\r\n  app,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import bg_image_1 from \"../assets/bg-images-start-page/bg-image-1.jpg\";\r\nimport bg_image_2 from \"../assets/bg-images-start-page/bg-image-2.jpg\";\r\nimport bg_image_3 from \"../assets/bg-images-start-page/bg-image-3.jpg\";\r\nimport bg_image_4 from \"../assets/bg-images-start-page/bg-image-4.jpg\";\r\nimport bg_image_5 from \"../assets/bg-images-start-page/bg-image-5.jpg\";\r\nimport bg_image_6 from \"../assets/bg-images-start-page/bg-image-6.jpg\";\r\nimport bg_image_7 from \"../assets/bg-images-start-page/bg-image-7.jpg\";\r\nimport bg_image_8 from \"../assets/bg-images-start-page/bg-image-8.jpg\";\r\nimport bg_image_9 from \"../assets/bg-images-start-page/bg-image-9.jpg\";\r\nimport bg_image_10 from \"../assets/bg-images-start-page/bg-image-10.jpg\";\r\nimport bg_image_11 from \"../assets/bg-images-start-page/bg-image-11.jpg\";\r\nimport bg_image_12 from \"../assets/bg-images-start-page/bg-image-12.jpg\";\r\n\r\nconst images = [\r\n  bg_image_1,\r\n  bg_image_2,\r\n  bg_image_3,\r\n  bg_image_4,\r\n  bg_image_5,\r\n  bg_image_6,\r\n  bg_image_7,\r\n  bg_image_8,\r\n  bg_image_9,\r\n  bg_image_10,\r\n  bg_image_11,\r\n  bg_image_12,\r\n];\r\n\r\nconst getRandomItem = (itemsArray) => {\r\n  return itemsArray[Math.floor(Math.random() * itemsArray.length)];\r\n};\r\n\r\nexport const getRandomBackgroundImage = (params) => {\r\n  return getRandomItem(images);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bg-image-1.e00dc60f.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-2.2f428736.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-3.44bba14c.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-4.cc5e7e63.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-5.bb797017.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-6.3b77a328.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-7.f369c512.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-8.61e14d11.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-9.09647c82.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-10.cbdc2aec.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-11.aca8ac7e.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-12.ce1bff71.jpg\";","import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { setStartPageClickedAC } from \"./../../redux/actions/actions\";\r\nimport { getStartData } from \"./../../redux/reducers/app\";\r\n\r\nimport { getRandomBackgroundImage } from \"../../utils/getRandomBackgroundImage\";\r\n\r\nimport \"./StartPage.scss\";\r\n\r\nconst StartPage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const onEnterButtonClickHandler = (params) => {\r\n    dispatch(setStartPageClickedAC());\r\n    dispatch(getStartData());\r\n\r\n    history.push(\"/information-about-portal\");\r\n  };\r\n\r\n  const backGroundImage = getRandomBackgroundImage();\r\n\r\n  return (\r\n    <div\r\n      className=\"start-page-container\"\r\n      style={{\r\n        backgroundImage: `url(${backGroundImage})`,\r\n      }}\r\n    >\r\n      <div className=\"start-page-container__enter-block\">\r\n        <h1 className=\"start-page-container__title title\">\r\n          <span className=\"title__highlighted-one\">Br</span>eaking&nbsp;\r\n          <span className=\"title__highlighted-two\">Ba</span>d\r\n        </h1>\r\n        <button\r\n          onClick={onEnterButtonClickHandler}\r\n          className=\"start-page-container__button\"\r\n        >\r\n          Enter\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./HeaderNav.scss\";\r\n\r\nconst HeaderNav = React.memo((prosp) => {\r\n  return (\r\n    <div className=\"header-nav-container\">\r\n      <NavLink\r\n        to=\"/random-character\"\r\n        className=\"header-nav-container__nav-btn\"\r\n        activeClassName=\"active-nav-btn\"\r\n      >\r\n        Random character\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/all-characters\"\r\n        className=\"header-nav-container__nav-btn\"\r\n        activeClassName=\"active-nav-btn\"\r\n      >\r\n        All characters\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/find-a-character\"\r\n        className=\"header-nav-container__nav-btn\"\r\n        activeClassName=\"active-nav-btn\"\r\n      >\r\n        Find a character\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/episodes\"\r\n        className=\"header-nav-container__nav-btn\"\r\n        activeClassName=\"active-nav-btn\"\r\n      >\r\n        Episodes\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/quotes\"\r\n        className=\"header-nav-container__nav-btn\"\r\n        activeClassName=\"active-nav-btn\"\r\n      >\r\n        Quotes\r\n      </NavLink>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default HeaderNav;\r\n","import React from \"react\";\r\n\r\nimport \"./InformationAboutPortal.scss\";\r\n\r\nconst InformationAboutPortal = (props) => {\r\n  return (\r\n    <div className=\"information-container\">\r\n      <h1 className=\"information-container__title title\">\r\n        <span className=\"title__highlighted-one\">Br</span>eaking&nbsp;\r\n        <span className=\"title__highlighted-two\">Ba</span>d Fan&nbsp;\r\n        <span className=\"title__highlighted-three\">Po</span>rtal\r\n      </h1>\r\n      <p className=\"information-container__text\">\r\n        <span className=\"information-container__text--highlighted\">Story</span>:\r\n        \"A high school chemistry teacher diagnosed with inoperable lung cancer\r\n        turns to manufacturing and selling methamphetamine in order to secure\r\n        his family's future.\"\r\n      </p>\r\n      <p className=\"information-container__text\">\r\n        Here you can find information about characters, also episodes and\r\n        quotes. Also you can search some character by name and get some short\r\n        summary about the character.\r\n      </p>\r\n      <p className=\"information-container__text\">\r\n        Just click on menu buttons above to start.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InformationAboutPortal;\r\n","import React from \"react\";\r\n\r\nimport \"./Preloader.scss\";\r\n\r\nconst Preloader = (props) => {\r\n  return (\r\n    <div className=\"preloader-container\">\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport { getRandomCharacter } from \"./../../redux/reducers/app\";\r\n\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\n\r\nimport \"./RandomCharacter.scss\";\r\n\r\nconst RandomCharacter = React.memo((props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { randomCharacter, isRandomCharacterLoading } = useSelector(\r\n    ({ app }) => app\r\n  );\r\n\r\n  const onRandomCharacterButtonClickHandler = (params) => {\r\n    dispatch(getRandomCharacter());\r\n  };\r\n\r\n  const {\r\n    appearance,\r\n    img,\r\n    name,\r\n    nickname,\r\n    occupation,\r\n    portrayed,\r\n    status,\r\n  } = randomCharacter;\r\n\r\n  return (\r\n    <div className=\"random-character-container character\">\r\n      {isRandomCharacterLoading ? <Preloader /> : null}\r\n      {isRandomCharacterLoading ? null : (\r\n        <React.Fragment>\r\n          <Fade>\r\n            <div className=\"character__content-left\">\r\n              <p className=\"character__name\">\r\n                <span className=\"character__bold-text\">Name</span> {name}\r\n              </p>\r\n              <p className=\"character__nickname\">\r\n                <span className=\"character__bold-text\">Nickname</span>{\" \"}\r\n                {nickname}\r\n              </p>\r\n              <p className=\"character__occupation\">\r\n                <span className=\"character__bold-text\">Occupation</span>{\" \"}\r\n                {occupation !== null ? occupation.join(\", \") : `No information`}\r\n              </p>\r\n              <p className=\"character__portrayed\">\r\n                <span className=\"character__bold-text\">Portrayed</span>{\" \"}\r\n                {portrayed}\r\n              </p>\r\n              <p className=\"character__status\">\r\n                <span className=\"character__bold-text\">Status</span> {status}\r\n              </p>\r\n              <p className=\"character__appearance\">\r\n                <span className=\"character__bold-text\">\r\n                  Appearance in season\r\n                </span>{\" \"}\r\n                {appearance !== null ? appearance.join(\", \") : `No information`}\r\n              </p>\r\n              <button\r\n                onClick={onRandomCharacterButtonClickHandler}\r\n                className=\"character__random-character-btn\"\r\n                type=\"button\"\r\n              >\r\n                Get random character\r\n              </button>\r\n              <br />\r\n            </div>\r\n            <div className=\"character__content-right\">\r\n              <div\r\n                className=\"character__photo\"\r\n                style={{\r\n                  backgroundImage: `url(${img})`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </Fade>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default RandomCharacter;\r\n","import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\n\r\nimport \"./AllCharacters.scss\";\r\n\r\nconst AllCharacters = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { allCharacters } = useSelector(({ app }) => app);\r\n\r\n  const [maxRange, setMaxRange] = React.useState(6);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const onLoadMoreBtnClickHandler = React.useCallback(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setMaxRange((prevRange) => prevRange + 6);\r\n      setIsLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const characterComponent = allCharacters\r\n    .slice(0, maxRange)\r\n    .map((character) => {\r\n      const {\r\n        appearance,\r\n        img,\r\n        name,\r\n        birthday,\r\n        nickname,\r\n        occupation,\r\n        portrayed,\r\n        status,\r\n        char_id,\r\n      } = character;\r\n\r\n      return (\r\n        <div key={char_id} className=\"characters-item\">\r\n          <div\r\n            className=\"characters-item__photo\"\r\n            style={{\r\n              backgroundImage: `url(${img})`,\r\n            }}\r\n          ></div>\r\n          <p className=\"characters-item__name\">\r\n            <span className=\"characters-item__bold-text\">Name</span> {name}\r\n          </p>\r\n          <p className=\"characters-item__birthday\">\r\n            <span className=\"characters-item__bold-text\">Birthday</span>{\" \"}\r\n            {birthday}\r\n          </p>\r\n          <p className=\"characters-item__nickname\">\r\n            <span className=\"character__bold-text\">Nickname</span> {nickname}\r\n          </p>\r\n          <p className=\"characters-item__occupation\">\r\n            <span className=\"characters-item__bold-text\">Occupation</span>{\" \"}\r\n            {occupation !== null ? occupation.join(\", \") : `No information`}\r\n          </p>\r\n          <p className=\"characters-item__portrayed\">\r\n            <span className=\"characters-item__bold-text\">Portrayed</span>{\" \"}\r\n            {portrayed}\r\n          </p>\r\n          <p className=\"characters-item__status\">\r\n            <span className=\"characters-item__bold-text\">Status</span> {status}\r\n          </p>\r\n          <p className=\"characters-item__appearance\">\r\n            <span className=\"characters-item__bold-text\">\r\n              Appearance in season\r\n            </span>{\" \"}\r\n            {appearance !== null ? appearance.join(\", \") : `No information`}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"charcters-items\">{characterComponent}</section>\r\n      <section className=\"charcters-items__btn-block\">\r\n        {allCharacters.length >= maxRange ? (\r\n          <React.Fragment>\r\n            {isLoading ? (\r\n              <div className=\"charcters-items__preloader\">\r\n                <Preloader />\r\n              </div>\r\n            ) : (\r\n              <button\r\n                onClick={onLoadMoreBtnClickHandler}\r\n                className=\"charcters-items__load-more-btn\"\r\n                type=\"button\"\r\n              >\r\n                Load more characters\r\n              </button>\r\n            )}\r\n          </React.Fragment>\r\n        ) : (\r\n          <br />\r\n        )}\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AllCharacters;\r\n","import React from \"react\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport \"./SearchResult.scss\";\r\n\r\nconst SearchResult = React.memo((props) => {\r\n  const [showMoreInfo, setShowMoreInfo] = React.useState(false);\r\n  const nodeRef = React.useRef(null);\r\n\r\n  const onShowMoreBtnClickHandler = () => {\r\n    setShowMoreInfo(!showMoreInfo);\r\n  };\r\n\r\n  const {\r\n    appearance,\r\n    img,\r\n    name,\r\n    birthday,\r\n    nickname,\r\n    occupation,\r\n    portrayed,\r\n    status,\r\n    char_id,\r\n  } = props.character;\r\n\r\n  const classesTransition = {\r\n    enter: \"enter\",\r\n    enterActive: \"enter-active\",\r\n    exit: \"exit\",\r\n    exitActive: \"exit-active\",\r\n    exitDone: \"exit-done\",\r\n  };\r\n\r\n  return (\r\n    <Fade cascade>\r\n      <div className=\"search-result-container search-result\">\r\n        <div key={char_id} className=\"search-result__item\">\r\n          <div\r\n            className=\"search-result__photo\"\r\n            style={{\r\n              backgroundImage: `url(${img})`,\r\n            }}\r\n          ></div>\r\n          <p className=\"search-result__name\">\r\n            <span className=\"search-result__bold-text\">Name</span> {name}\r\n          </p>\r\n\r\n          <button\r\n            onClick={onShowMoreBtnClickHandler}\r\n            className=\"search-result__more-info-btn\"\r\n          >\r\n            {showMoreInfo ? `Hide` : `Show more`}\r\n          </button>\r\n          <CSSTransition\r\n            nodeRef={nodeRef}\r\n            in={showMoreInfo}\r\n            timeout={500}\r\n            classNames={classesTransition}\r\n            unmountOnExit\r\n            mountOnEnter\r\n          >\r\n            <div ref={nodeRef} className=\"search-result__container-more\">\r\n              <p className=\"search-result__birthday\">\r\n                <span className=\"search-result__bold-text\">Birthday</span>{\" \"}\r\n                {birthday}\r\n              </p>\r\n              <p className=\"search-result__nickname\">\r\n                <span className=\"character__bold-text\">Nickname</span>{\" \"}\r\n                {nickname}\r\n              </p>\r\n              <p className=\"search-result__occupation\">\r\n                <span className=\"search-result__bold-text\">Occupation</span>{\" \"}\r\n                {occupation !== null ? occupation.join(\", \") : `No information`}\r\n              </p>\r\n              <p className=\"search-result__portrayed\">\r\n                <span className=\"search-result__bold-text\">Portrayed</span>{\" \"}\r\n                {portrayed}\r\n              </p>\r\n              <p className=\"search-result__status\">\r\n                <span className=\"search-result__bold-text\">Status</span>{\" \"}\r\n                {status}\r\n              </p>\r\n              <p className=\"search-result__appearance\">\r\n                <span className=\"search-result__bold-text\">\r\n                  Appearance in season\r\n                </span>{\" \"}\r\n                {appearance !== null ? appearance.join(\", \") : `No information`}\r\n              </p>\r\n            </div>\r\n          </CSSTransition>\r\n        </div>\r\n      </div>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default SearchResult;\r\n","import React from \"react\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport \"./NothingFound.scss\";\r\n\r\nconst NothingFound = React.memo((props) => {\r\n  return (\r\n    <Fade>\r\n      <div className=\"nothing-found-container nothing-found\">\r\n        <h1 className=\"nothing-found__title\">\r\n          Nothing matches your search. Try to change the request.\r\n        </h1>\r\n        <div className=\"nothing-found__image\"></div>\r\n      </div>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default NothingFound;\r\n","import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getSearchedCharacter } from \"./../../redux/reducers/app\";\r\n\r\nimport SearchResult from \"./../SearchResult/SearchResult\";\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\nimport NothingFound from \"../UI/NothingFound/NothingFound\";\r\n\r\nimport \"./FindACharacter.scss\";\r\n\r\nconst FindACharacter = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { searchedCharacter, isSearching } = useSelector(({ app }) => app);\r\n  const [searchedCharacterItem, setSearchedCharacter] = React.useState(``);\r\n  const [disabled, setDisabled] = React.useState(true);\r\n\r\n  const onInputFiledChangeHandler = (e) => {\r\n    setSearchedCharacter(e.target.value.trim());\r\n\r\n    if (e.target.value.trim().length === 0) {\r\n      setDisabled(true);\r\n    }\r\n\r\n    if (e.target.value.trim().length !== 0) {\r\n      setDisabled(false);\r\n    }\r\n  };\r\n\r\n  const onSearchButtonClickHander = () => {\r\n    dispatch(getSearchedCharacter(searchedCharacterItem));\r\n    setSearchedCharacter(``);\r\n    setDisabled(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"find-a-character-container\">\r\n      <section className=\"find-a-character-container__input-field input-field\">\r\n        <input\r\n          onChange={(e) => onInputFiledChangeHandler(e)}\r\n          value={searchedCharacterItem}\r\n          type=\"text\"\r\n          className=\"input-field__input\"\r\n          placeholder=\"Walter...\"\r\n        />\r\n        <button\r\n          onClick={onSearchButtonClickHander}\r\n          type=\"button\"\r\n          className=\"input-field__search-btn\"\r\n          disabled={disabled}\r\n        >\r\n          Search\r\n        </button>\r\n      </section>\r\n\r\n      {isSearching ? (\r\n        <div className=\"find-a-character-container__preloader\">\r\n          <Preloader />\r\n        </div>\r\n      ) : null}\r\n\r\n      {searchedCharacter !== null ? (\r\n        <>\r\n          {searchedCharacter.length === 0 && !isSearching ? (\r\n            <NothingFound />\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n\r\n      {searchedCharacter !== null ? (\r\n        <>\r\n          {searchedCharacter.length !== 0 && !isSearching ? (\r\n            <section className=\"find-a-character-container__result result\">\r\n              {searchedCharacter.map((character) => (\r\n                <SearchResult key={character.char_id} character={character} />\r\n              ))}\r\n            </section>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindACharacter;\r\n","import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\n\r\nimport \"./Episodes.scss\";\r\n\r\nconst Episodes = (props) => {\r\n  const { allEpisodes } = useSelector(({ app }) => app);\r\n\r\n  const [maxRange, setMaxRange] = React.useState(9);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const onLoadMoreBtnClickHandler = React.useCallback(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setMaxRange((prevRange) => prevRange + 6);\r\n      setIsLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const episodesComponent = allEpisodes\r\n    .slice(0, maxRange)\r\n    .map((episodeItem) => {\r\n      const {\r\n        title,\r\n        air_date,\r\n        episode,\r\n        season,\r\n        characters,\r\n        episode_id,\r\n      } = episodeItem;\r\n\r\n      return (\r\n        <section key={episode_id} className=\"episode__item\">\r\n          <p className=\"episode__episode-num\">\r\n            <span className=\"episode__bold-text\">Episode</span> {episode}\r\n          </p>\r\n          <p className=\"episode__season\">\r\n            <span className=\"episode__bold-text\">Season</span> {season}\r\n          </p>\r\n          <p className=\"episode__title\">\r\n            <span className=\"episode__bold-text\">Title</span> {title}\r\n          </p>\r\n          <p className=\"episode__air-date\">\r\n            <span className=\"episode__bold-text\">Air date</span> {air_date}\r\n          </p>\r\n          <p className=\"episode__characters\">\r\n            <span className=\"episode__bold-text\">Characters</span>{\" \"}\r\n            {characters !== null ? characters.join(\", \") : `No information`}\r\n          </p>\r\n        </section>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"episode-container episode\">{episodesComponent}</div>\r\n      <div className=\"episode-container__btn-block\">\r\n        {allEpisodes.length >= maxRange ? (\r\n          <React.Fragment>\r\n            {isLoading ? (\r\n              <div className=\"episode-container__preloader\">\r\n                <Preloader />\r\n              </div>\r\n            ) : (\r\n              <button\r\n                onClick={onLoadMoreBtnClickHandler}\r\n                className=\"episode-container__load-more-btn\"\r\n                type=\"button\"\r\n              >\r\n                Load more episodes\r\n              </button>\r\n            )}\r\n          </React.Fragment>\r\n        ) : (\r\n          <br />\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Episodes;\r\n","import React from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getFilteredQuotesAC,\r\n  setActiveFilterButtonIndexAC,\r\n  setAllQuotesAC,\r\n} from \"./../../redux/actions/actions\";\r\n\r\nimport \"./QuotesFilter.scss\";\r\n\r\nconst QuotesFilter = React.memo((props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { activeFilterButtonIndex } = useSelector(({ app }) => app);\r\n\r\n  const onAllQuotesClickHandler = () => {\r\n    dispatch(setActiveFilterButtonIndexAC(0));\r\n    dispatch(setAllQuotesAC());\r\n  };\r\n\r\n  const onFilterButtonClickHandler = (index, character) => {\r\n    dispatch(setActiveFilterButtonIndexAC(index));\r\n    dispatch(getFilteredQuotesAC(character));\r\n  };\r\n\r\n  const { authorsOfQuotes } = props;\r\n\r\n  return (\r\n    <div className=\"quotes-filter-container\">\r\n      <button\r\n        onClick={onAllQuotesClickHandler}\r\n        className={`quotes-filter-container__filter-btn ${\r\n          activeFilterButtonIndex === 0 ? `active-filter-btn` : null\r\n        }`}\r\n        type=\"button\"\r\n        disabled={activeFilterButtonIndex === 0}\r\n      >\r\n        All quotes\r\n      </button>\r\n      {authorsOfQuotes.map((author, index) => (\r\n        <button\r\n          onClick={() => onFilterButtonClickHandler(index + 1, author)}\r\n          key={author + index}\r\n          className={`quotes-filter-container__filter-btn ${\r\n            activeFilterButtonIndex === index + 1 ? `active-filter-btn` : null\r\n          }`}\r\n          type=\"button\"\r\n          disabled={activeFilterButtonIndex === index + 1}\r\n        >\r\n          {author}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default QuotesFilter;\r\n","import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\n\r\nimport { getRandomQuote } from \"./../../redux/reducers/app\";\r\n\r\nimport QuotesFilter from \"./../QuotesFilter/QuotesFilter\";\r\n\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\n\r\nimport \"./Quotes.scss\";\r\n\r\nconst Quotes = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    randomQuote,\r\n    isRandomQuoteLoading,\r\n    quotes,\r\n    filteredQuotes,\r\n  } = useSelector(({ app }) => app);\r\n\r\n  const onGetRandomQuoteClickHandler = () => {\r\n    dispatch(getRandomQuote());\r\n  };\r\n\r\n  const { quote, author } = randomQuote[0];\r\n\r\n  const authorsOfQuotes = [\r\n    ...new Set(quotes.map((quoteItem) => quoteItem.author)),\r\n  ];\r\n\r\n  const getQuotes = (quotes, filteredQuotes) => {\r\n    let qoutes = [];\r\n\r\n    if (filteredQuotes.length === 0) {\r\n      qoutes = quotes;\r\n    } else {\r\n      qoutes = filteredQuotes;\r\n    }\r\n\r\n    return qoutes;\r\n  };\r\n\r\n  return (\r\n    <div className=\"quotes-container quotes\">\r\n      <section className=\"quotes__left random-quote\">\r\n        <p className=\"random-quote__title\">\r\n          <span className=\"random-quote__title-one\">Ra</span>ndom quote.\r\n        </p>\r\n        {isRandomQuoteLoading ? (\r\n          <Preloader />\r\n        ) : (\r\n          <Zoom>\r\n            <figure className=\"random-quote__body\">\r\n              <blockquote lang=\"en\" className=\"random-quote__text\">\r\n                <q>{quote}</q>\r\n              </blockquote>\r\n              <figcaption className=\"random-quote__author\">\r\n                &mdash; {author}\r\n              </figcaption>\r\n            </figure>\r\n          </Zoom>\r\n        )}\r\n\r\n        <button\r\n          onClick={onGetRandomQuoteClickHandler}\r\n          className=\"random-quote__get-quote-btn\"\r\n          type=\"button\"\r\n        >\r\n          Get random quote\r\n        </button>\r\n      </section>\r\n      <section className=\"quotes__right quote-item\">\r\n        <QuotesFilter authorsOfQuotes={authorsOfQuotes} />\r\n\r\n        <div className=\"quote-item__quote-block quote-block\">\r\n          {getQuotes(quotes, filteredQuotes).map((quoteItem) => {\r\n            const { quote_id, quote, author } = quoteItem;\r\n            return (\r\n              <Fade key={quote_id} cascade>\r\n                <div className=\"quote-block__body\">\r\n                  <blockquote lang=\"en\" className=\"quote-block__text\">\r\n                    <q>{quote}</q>\r\n                  </blockquote>\r\n                  <figcaption className=\"quote-block__author\">\r\n                    &mdash; {author}\r\n                  </figcaption>\r\n                </div>\r\n              </Fade>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","import React from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport HeaderNav from \"./../HeaderNav/HeaderNav\";\r\nimport InformationAboutPortal from \"./../InformationAboutPortal/InformationAboutPortal\";\r\nimport RandomCharacter from \"./../RandomCharacter/RandomCharacter\";\r\nimport AllCharacters from \"./../AllCharacters/AllCharacters\";\r\nimport FindACharacter from \"./../FindACharacter/FindACharacter\";\r\nimport Episodes from \"./../Episodes/Episodes\";\r\nimport Quotes from \"./../Quotes/Quotes\";\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\n\r\nimport \"./MainPage.scss\";\r\n\r\nconst MainPage = (props) => {\r\n  const { isStartDataLoading } = useSelector(({ app }) => app);\r\n  return (\r\n    <div className=\"main-page-container\">\r\n      {isStartDataLoading ? (\r\n        <div className=\"main-page-container__preloader-block\">\r\n          <Preloader />\r\n        </div>\r\n      ) : (\r\n        <HeaderNav />\r\n      )}\r\n\r\n      <Switch>\r\n        <Redirect\r\n          exact\r\n          from=\"/\"\r\n          to=\"/information-about-portal\"\r\n          component={InformationAboutPortal}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/information-about-portal\"\r\n          component={InformationAboutPortal}\r\n        />\r\n\r\n        <Route exact path=\"/random-character\" component={RandomCharacter} />\r\n        <Route exact path=\"/all-characters\" component={AllCharacters} />\r\n        <Route exact path=\"/find-a-character\" component={FindACharacter} />\r\n        <Route exact path=\"/episodes\" component={Episodes} />\r\n        <Route exact path=\"/quotes\" component={Quotes} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport StartPage from \"./../StartPage/StartPage\";\nimport MainPage from \"./../MainPage/MainPage\";\n\nimport \"./App.scss\";\n\nconst App = (props) => {\n  const { isStartPageClicked } = useSelector(({ app }) => app);\n\n  const widthOfTheScreen =\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    document.body.clientWidth;\n\n  return (\n    <div className=\"app-container\">\n      {widthOfTheScreen >= 1024 ? (\n        <React.Fragment>\n          {isStartPageClicked ? <MainPage /> : <StartPage />}\n        </React.Fragment>\n      ) : (\n        `Not good`\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport { HashRouter } from \"react-router-dom\";\n\nimport store from \"./redux/store\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport App from \"./components/App/App\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <HashRouter>\n    <React.Fragment>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.Fragment>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}