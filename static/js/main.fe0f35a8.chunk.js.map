{"version":3,"sources":["const.js","api/api.js","redux/actions/actionTypes.js","redux/actions/actions.js","redux/reducers/app.js","redux/reducers/rootReducer.js","redux/store.js","reportWebVitals.js","utils/getRandomBackgroundImage.js","assets/bg-images-start-page/bg-image-1.jpg","assets/bg-images-start-page/bg-image-2.jpg","assets/bg-images-start-page/bg-image-3.jpg","assets/bg-images-start-page/bg-image-4.jpg","assets/bg-images-start-page/bg-image-5.jpg","assets/bg-images-start-page/bg-image-6.jpg","assets/bg-images-start-page/bg-image-7.jpg","assets/bg-images-start-page/bg-image-8.jpg","assets/bg-images-start-page/bg-image-9.jpg","assets/bg-images-start-page/bg-image-10.jpg","assets/bg-images-start-page/bg-image-11.jpg","assets/bg-images-start-page/bg-image-12.jpg","components/StartPage/StartPage.jsx","components/HeaderNav/HeaderNav.jsx","components/InformationAboutPortal/InformationAboutPortal.jsx","components/UI/Preloader/Preloader.jsx","components/RandomCharacter/RandomCharacter.jsx","components/AllCharacters/AllCharacters.jsx","components/SearchResult/SearchResult.jsx","components/UI/NothingFound/NothingFound.jsx","components/FindACharacter/FindACharacter.jsx","components/Episodes/Episodes.jsx","components/QuotesFilter/QuotesFilter.jsx","components/Quotes/Quotes.jsx","components/MainPage/MainPage.jsx","components/WarningPage/WarningPage.jsx","assets/images-error-page/gif-1.gif","components/UI/ErrorPage/ErrorPage.jsx","components/App/App.jsx","index.jsx"],"names":["STATUS_CODE","KEY_CODE","instanceAPI","axios","baseURL","appAPI","get","searchedCharacter","SET_START_PAGE_CLICKED","GET_RANDOM_CHARACTER","IS_RANDOM_CHARACTER_LOADING","GET_ALL_CHARACTERS","GET_SEARCHED_CHARACTER","IS_SEARCHING","GET_ALL_EPISODES","GET_RANDOM_QUOTE","IS_RANDOM_QUOTE_LOADING","GET_ALL_QUOTES","IS_START_DATA_LODING","SET_ACTIVE_FILTER_BUTTON_INDEX","GET_FILTERED_QUOTES","SET_ALL_QUOTES","IS_ERROR_OCCURED","setStartPageClickedAC","type","getRandomCharacterAC","randomCharacter","isRandomCharacterLoadingAC","isRandomCharacterLoading","getSearchedCharacterAC","isSearchingAC","isSearching","getRandomQuoteAC","randomQuote","isRandomQuoteLoadingAC","isRandomQuoteLoading","isStartDataLoadingAC","isStartDataLoading","setActiveFilterButtonIndexAC","activeFilterButtonIndex","isErrorOccuredAC","isErrorOccured","initialState","isStartPageClicked","allCharacters","allEpisodes","quotes","filteredQuotes","getStartData","dispatch","a","responseRandomCharacter","status","data","responseAllCharaters","responseAllEpisodes","responseRandomQuote","responseAllQuotes","console","log","appReducer","state","action","filter","character","category","includes","episode","series","quote","author","rootReducer","combineReducers","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","images","getRandomBackgroundImage","params","itemsArray","Math","floor","random","length","StartPage","props","useDispatch","history","useHistory","onKeyDown","e","keyCode","push","cbRef","React","useRef","useEffect","current","cb","addEventListener","removeEventListener","backGroundImage","className","style","backgroundImage","onClick","routes","path","name","HeaderNav","memo","prosp","map","route","index","to","activeClassName","InformationAboutPortal","Preloader","RandomCharacter","useSelector","appearance","img","nickname","occupation","portrayed","Fragment","join","response","defaultProps","AllCharacters","useState","maxRange","setMaxRange","isLoading","setIsLoading","onLoadMoreBtnClickHandler","useCallback","setTimeout","prevRange","characterComponent","slice","birthday","char_id","SearchResult","showMoreInfo","setShowMoreInfo","nodeRef","cascade","CSSTransition","in","timeout","classNames","enter","enterActive","exit","exitActive","exitDone","unmountOnExit","mountOnEnter","ref","NothingFound","FindACharacter","searchedCharacterItem","setSearchedCharacter","disabled","setDisabled","onChange","target","value","trim","onInputFiledChangeHandler","placeholder","getSearchedCharacter","Episodes","episodesComponent","episodeItem","title","air_date","season","characters","episode_id","QuotesFilter","onFilterButtonClickHandler","getFilteredQuotesAC","authorsOfQuotes","Quotes","Set","quoteItem","lang","getQuotes","quote_id","MainPage","exact","from","component","WarningPage","ErrorPage","src","gifErrorPage","alt","App","widthOfTheScreen","innerWidth","document","documentElement","clientWidth","body","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fe0f35a8.chunk.js","sourcesContent":["export const bbAPI = `https://www.breakingbadapi.com/api/`;\r\n\r\nexport const STATUS_CODE = {\r\n  SUCCESS: 200,\r\n};\r\n\r\nexport const KEY_CODE = {\r\n  ENTER: 13,\r\n  SPACE: 32,\r\n};\r\n","import * as axios from \"axios\";\r\n\r\nimport { bbAPI } from \"./../const\";\r\n\r\nconst instanceAPI = axios.create({\r\n  baseURL: bbAPI,\r\n});\r\n\r\nexport const appAPI = {\r\n  getRandomCharacter() {\r\n    return instanceAPI.get(`character/random`);\r\n  },\r\n\r\n  getAllCharaters() {\r\n    return instanceAPI.get(`characters`);\r\n  },\r\n\r\n  getSearchedCharacter(searchedCharacter) {\r\n    return instanceAPI.get(`characters?name=${searchedCharacter}`);\r\n  },\r\n\r\n  getAllEpisodes() {\r\n    return instanceAPI.get(`episodes`);\r\n  },\r\n\r\n  getRandomQuote() {\r\n    return instanceAPI.get(`quote/random`);\r\n  },\r\n\r\n  getAllQuotes() {\r\n    return instanceAPI.get(`quotes`);\r\n  },\r\n};\r\n","export const SET_START_PAGE_CLICKED = `SET_START_PAGE_CLICKED`;\r\nexport const SET_NAV_CLICKED = `SET_NAV_CLICKED`;\r\nexport const GET_RANDOM_CHARACTER = `GET_RANDOM_CHARACTER`;\r\nexport const IS_RANDOM_CHARACTER_LOADING = `IS_RANDOM_CHARACTER_LOADING`;\r\nexport const GET_ALL_CHARACTERS = `GET_ALL_CHARACTERS`;\r\nexport const GET_SEARCHED_CHARACTER = `GET_SEARCHED_CHARACTER`;\r\nexport const IS_SEARCHING = `IS_SEARCHING`;\r\nexport const GET_ALL_EPISODES = `GET_ALL_EPISODES`;\r\nexport const GET_RANDOM_QUOTE = `GET_RANDOM_QUOTE`;\r\nexport const IS_RANDOM_QUOTE_LOADING = `IS_RANDOM_QUOTE_LOADING`;\r\nexport const GET_ALL_QUOTES = `GET_ALL_QUOTES`;\r\nexport const IS_START_DATA_LODING = `IS_START_DATA_LODING`;\r\nexport const SET_ACTIVE_FILTER_BUTTON_INDEX = `SET_ACTIVE_FILTER_BUTTON_INDEX`;\r\nexport const GET_FILTERED_QUOTES = `GET_FILTERED_QUOTES`;\r\nexport const SET_ALL_QUOTES = `SET_ALL_QUOTES`;\r\nexport const IS_ERROR_OCCURED = `IS_ERROR_OCCURED`;\r\n","import {\r\n  SET_START_PAGE_CLICKED,\r\n  GET_RANDOM_CHARACTER,\r\n  IS_RANDOM_CHARACTER_LOADING,\r\n  GET_ALL_CHARACTERS,\r\n  GET_SEARCHED_CHARACTER,\r\n  IS_SEARCHING,\r\n  GET_ALL_EPISODES,\r\n  GET_RANDOM_QUOTE,\r\n  IS_RANDOM_QUOTE_LOADING,\r\n  GET_ALL_QUOTES,\r\n  IS_START_DATA_LODING,\r\n  SET_ACTIVE_FILTER_BUTTON_INDEX,\r\n  GET_FILTERED_QUOTES,\r\n  SET_ALL_QUOTES,\r\n  IS_ERROR_OCCURED,\r\n} from \"./actionTypes\";\r\n\r\nexport const setStartPageClickedAC = () => ({\r\n  type: SET_START_PAGE_CLICKED,\r\n});\r\n\r\nexport const getRandomCharacterAC = (randomCharacter) => ({\r\n  type: GET_RANDOM_CHARACTER,\r\n  randomCharacter,\r\n});\r\n\r\nexport const isRandomCharacterLoadingAC = (isRandomCharacterLoading) => ({\r\n  type: IS_RANDOM_CHARACTER_LOADING,\r\n  isRandomCharacterLoading,\r\n});\r\n\r\nexport const getAllCharactersAC = (allCharacters) => ({\r\n  type: GET_ALL_CHARACTERS,\r\n  allCharacters,\r\n});\r\n\r\nexport const getSearchedCharacterAC = (searchedCharacter) => ({\r\n  type: GET_SEARCHED_CHARACTER,\r\n  searchedCharacter,\r\n});\r\n\r\nexport const isSearchingAC = (isSearching) => ({\r\n  type: IS_SEARCHING,\r\n  isSearching,\r\n});\r\n\r\nexport const getAllEpisodesAC = (allEpisodes) => ({\r\n  type: GET_ALL_EPISODES,\r\n  allEpisodes,\r\n});\r\n\r\nexport const getRandomQuoteAC = (randomQuote) => ({\r\n  type: GET_RANDOM_QUOTE,\r\n  randomQuote,\r\n});\r\n\r\nexport const isRandomQuoteLoadingAC = (isRandomQuoteLoading) => ({\r\n  type: IS_RANDOM_QUOTE_LOADING,\r\n  isRandomQuoteLoading,\r\n});\r\n\r\nexport const getAllQuotesAC = (quotes) => ({\r\n  type: GET_ALL_QUOTES,\r\n  quotes,\r\n});\r\n\r\nexport const isStartDataLoadingAC = (isStartDataLoading) => ({\r\n  type: IS_START_DATA_LODING,\r\n  isStartDataLoading,\r\n});\r\n\r\nexport const setActiveFilterButtonIndexAC = (activeFilterButtonIndex) => ({\r\n  type: SET_ACTIVE_FILTER_BUTTON_INDEX,\r\n  activeFilterButtonIndex,\r\n});\r\n\r\nexport const getFilteredQuotesAC = (character) => ({\r\n  type: GET_FILTERED_QUOTES,\r\n  character,\r\n});\r\n\r\nexport const setAllQuotesAC = () => ({\r\n  type: SET_ALL_QUOTES,\r\n});\r\n\r\nexport const isErrorOccuredAC = (isErrorOccured) => ({\r\n  type: IS_ERROR_OCCURED,\r\n  isErrorOccured,\r\n});\r\n","import { STATUS_CODE } from \"../../const\";\r\n\r\nimport { appAPI } from \"./../../api/api\";\r\n\r\nimport {\r\n  getRandomCharacterAC,\r\n  isRandomCharacterLoadingAC,\r\n  getAllCharactersAC,\r\n  getSearchedCharacterAC,\r\n  isSearchingAC,\r\n  getAllEpisodesAC,\r\n  getRandomQuoteAC,\r\n  isRandomQuoteLoadingAC,\r\n  getAllQuotesAC,\r\n  isStartDataLoadingAC,\r\n  isErrorOccuredAC,\r\n} from \"../actions/actions\";\r\n\r\nimport {\r\n  SET_START_PAGE_CLICKED,\r\n  GET_RANDOM_CHARACTER,\r\n  IS_RANDOM_CHARACTER_LOADING,\r\n  GET_ALL_CHARACTERS,\r\n  GET_SEARCHED_CHARACTER,\r\n  IS_SEARCHING,\r\n  GET_ALL_EPISODES,\r\n  GET_RANDOM_QUOTE,\r\n  IS_RANDOM_QUOTE_LOADING,\r\n  GET_ALL_QUOTES,\r\n  IS_START_DATA_LODING,\r\n  SET_ACTIVE_FILTER_BUTTON_INDEX,\r\n  GET_FILTERED_QUOTES,\r\n  SET_ALL_QUOTES,\r\n  IS_ERROR_OCCURED,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isStartPageClicked: false,\r\n  randomCharacter: [],\r\n  isRandomCharacterLoading: false,\r\n  allCharacters: [],\r\n  searchedCharacter: null,\r\n  isSearching: false,\r\n  allEpisodes: [],\r\n  randomQuote: [],\r\n  isRandomQuoteLoading: false,\r\n  quotes: [],\r\n  isStartDataLoading: false,\r\n  activeFilterButtonIndex: 0,\r\n  filteredQuotes: [],\r\n  isErrorOccured: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_START_PAGE_CLICKED:\r\n      return {\r\n        ...state,\r\n        isStartPageClicked: true,\r\n      };\r\n\r\n    case GET_RANDOM_CHARACTER:\r\n      return {\r\n        ...state,\r\n        randomCharacter: action.randomCharacter,\r\n      };\r\n\r\n    case IS_RANDOM_CHARACTER_LOADING:\r\n      return {\r\n        ...state,\r\n        isRandomCharacterLoading: action.isRandomCharacterLoading,\r\n      };\r\n\r\n    case GET_ALL_CHARACTERS:\r\n      return {\r\n        ...state,\r\n        allCharacters: action.allCharacters,\r\n      };\r\n\r\n    case GET_SEARCHED_CHARACTER:\r\n      return {\r\n        ...state,\r\n        searchedCharacter: action.searchedCharacter.filter((character) =>\r\n          character.category.includes(`Breaking Bad`)\r\n        ),\r\n      };\r\n\r\n    case IS_SEARCHING:\r\n      return {\r\n        ...state,\r\n        isSearching: action.isSearching,\r\n      };\r\n\r\n    case GET_ALL_EPISODES:\r\n      return {\r\n        ...state,\r\n        allEpisodes: action.allEpisodes.filter(\r\n          (episode) => episode.series === `Breaking Bad`\r\n        ),\r\n      };\r\n\r\n    case GET_RANDOM_QUOTE:\r\n      return {\r\n        ...state,\r\n        randomQuote: action.randomQuote,\r\n      };\r\n\r\n    case IS_RANDOM_QUOTE_LOADING:\r\n      return {\r\n        ...state,\r\n        isRandomQuoteLoading: action.isRandomQuoteLoading,\r\n      };\r\n\r\n    case GET_ALL_QUOTES:\r\n      return {\r\n        ...state,\r\n        quotes: action.quotes.filter(\r\n          (quote) => quote.series === `Breaking Bad`\r\n        ),\r\n      };\r\n\r\n    case IS_START_DATA_LODING:\r\n      return {\r\n        ...state,\r\n        isStartDataLoading: action.isStartDataLoading,\r\n      };\r\n\r\n    case SET_ACTIVE_FILTER_BUTTON_INDEX:\r\n      return {\r\n        ...state,\r\n        activeFilterButtonIndex: action.activeFilterButtonIndex,\r\n      };\r\n\r\n    case GET_FILTERED_QUOTES:\r\n      return {\r\n        ...state,\r\n        filteredQuotes: state.quotes.filter(\r\n          (quote) => quote.author === action.character\r\n        ),\r\n      };\r\n\r\n    case SET_ALL_QUOTES:\r\n      return {\r\n        ...state,\r\n        filteredQuotes: [...state.quotes],\r\n      };\r\n\r\n    case IS_ERROR_OCCURED:\r\n      return {\r\n        ...state,\r\n        isErrorOccured: action.isErrorOccured,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Thunks\r\nexport const getRandomCharacter = () => async (dispatch) => {\r\n  try {\r\n    dispatch(isRandomCharacterLoadingAC(true));\r\n    const response = await appAPI.getRandomCharacter();\r\n    if (response.status === STATUS_CODE.SUCCESS) {\r\n      dispatch(getRandomCharacterAC(response.data[0]));\r\n      dispatch(isRandomCharacterLoadingAC(false));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(isErrorOccuredAC(true));\r\n  }\r\n};\r\n\r\nexport const getSearchedCharacter = (searchedCharacter) => async (dispatch) => {\r\n  try {\r\n    dispatch(isSearchingAC(true));\r\n    const response = await appAPI.getSearchedCharacter(searchedCharacter);\r\n    if (response.status === STATUS_CODE.SUCCESS) {\r\n      dispatch(getSearchedCharacterAC(response.data));\r\n      dispatch(isSearchingAC(false));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(isErrorOccuredAC(true));\r\n  }\r\n};\r\n\r\nexport const getRandomQuote = () => async (dispatch) => {\r\n  try {\r\n    dispatch(isRandomQuoteLoadingAC(true));\r\n    const response = await appAPI.getRandomQuote();\r\n    if (response.status === STATUS_CODE.SUCCESS) {\r\n      dispatch(getRandomQuoteAC(response.data));\r\n      dispatch(isRandomQuoteLoadingAC(false));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(isErrorOccuredAC(true));\r\n  }\r\n};\r\n\r\nexport const getStartData = () => async (dispatch) => {\r\n  try {\r\n    dispatch(isStartDataLoadingAC(true));\r\n\r\n    const responseRandomCharacter = await appAPI.getRandomCharacter();\r\n    if (responseRandomCharacter.status === STATUS_CODE.SUCCESS) {\r\n      dispatch(getRandomCharacterAC(responseRandomCharacter.data[0]));\r\n    }\r\n    const responseAllCharaters = await appAPI.getAllCharaters();\r\n\r\n    if (responseAllCharaters.status === STATUS_CODE.SUCCESS) {\r\n      dispatch(getAllCharactersAC(responseAllCharaters.data));\r\n    }\r\n\r\n    const responseAllEpisodes = await appAPI.getAllEpisodes();\r\n    if (responseAllEpisodes.status === STATUS_CODE.SUCCESS) {\r\n      dispatch(getAllEpisodesAC(responseAllEpisodes.data));\r\n    }\r\n\r\n    const responseRandomQuote = await appAPI.getRandomQuote();\r\n    if (responseRandomQuote.status === STATUS_CODE.SUCCESS) {\r\n      dispatch(getRandomQuoteAC(responseRandomQuote.data));\r\n    }\r\n\r\n    const responseAllQuotes = await appAPI.getAllQuotes();\r\n    if (responseAllQuotes.status === STATUS_CODE.SUCCESS) {\r\n      dispatch(getAllQuotesAC(responseAllQuotes.data));\r\n    }\r\n\r\n    dispatch(isStartDataLoadingAC(false));\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch(isErrorOccuredAC(true));\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport app from \"./app\";\r\n\r\nconst rootReducer = combineReducers({\r\n  app,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import bg_image_1 from \"../assets/bg-images-start-page/bg-image-1.jpg\";\r\nimport bg_image_2 from \"../assets/bg-images-start-page/bg-image-2.jpg\";\r\nimport bg_image_3 from \"../assets/bg-images-start-page/bg-image-3.jpg\";\r\nimport bg_image_4 from \"../assets/bg-images-start-page/bg-image-4.jpg\";\r\nimport bg_image_5 from \"../assets/bg-images-start-page/bg-image-5.jpg\";\r\nimport bg_image_6 from \"../assets/bg-images-start-page/bg-image-6.jpg\";\r\nimport bg_image_7 from \"../assets/bg-images-start-page/bg-image-7.jpg\";\r\nimport bg_image_8 from \"../assets/bg-images-start-page/bg-image-8.jpg\";\r\nimport bg_image_9 from \"../assets/bg-images-start-page/bg-image-9.jpg\";\r\nimport bg_image_10 from \"../assets/bg-images-start-page/bg-image-10.jpg\";\r\nimport bg_image_11 from \"../assets/bg-images-start-page/bg-image-11.jpg\";\r\nimport bg_image_12 from \"../assets/bg-images-start-page/bg-image-12.jpg\";\r\n\r\nconst images = [\r\n  bg_image_1,\r\n  bg_image_2,\r\n  bg_image_3,\r\n  bg_image_4,\r\n  bg_image_5,\r\n  bg_image_6,\r\n  bg_image_7,\r\n  bg_image_8,\r\n  bg_image_9,\r\n  bg_image_10,\r\n  bg_image_11,\r\n  bg_image_12,\r\n];\r\n\r\nconst getRandomItem = (itemsArray) => {\r\n  return itemsArray[Math.floor(Math.random() * itemsArray.length)];\r\n};\r\n\r\nexport const getRandomBackgroundImage = (params) => {\r\n  return getRandomItem(images);\r\n};\r\n","export default __webpack_public_path__ + \"static/media/bg-image-1.e00dc60f.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-2.2f428736.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-3.44bba14c.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-4.cc5e7e63.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-5.bb797017.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-6.3b77a328.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-7.f369c512.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-8.61e14d11.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-9.09647c82.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-10.cbdc2aec.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-11.aca8ac7e.jpg\";","export default __webpack_public_path__ + \"static/media/bg-image-12.ce1bff71.jpg\";","import React from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { setStartPageClickedAC } from \"./../../redux/actions/actions\";\r\nimport { getStartData } from \"./../../redux/reducers/app\";\r\n\r\nimport { KEY_CODE } from \"./../../const\";\r\n\r\nimport { getRandomBackgroundImage } from \"../../utils/getRandomBackgroundImage\";\r\n\r\nimport \"./StartPage.scss\";\r\n\r\nconst StartPage = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const onKeyDown = (e) => {\r\n    if (e.keyCode === KEY_CODE.ENTER || e.keyCode === KEY_CODE.SPACE) {\r\n      dispatch(setStartPageClickedAC());\r\n      dispatch(getStartData());\r\n\r\n      history.push(\"/information-about-portal\");\r\n    }\r\n  };\r\n\r\n  const cbRef = React.useRef(onKeyDown);\r\n\r\n  React.useEffect(() => {\r\n    cbRef.current = onKeyDown;\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const cb = (e) => cbRef.current(e);\r\n    window.addEventListener(\"keydown\", cb);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", cb);\r\n    };\r\n  }, []);\r\n\r\n  const onEnterButtonClickHandler = (params) => {\r\n    dispatch(setStartPageClickedAC());\r\n    dispatch(getStartData());\r\n\r\n    history.push(\"/information-about-portal\");\r\n  };\r\n\r\n  const backGroundImage = getRandomBackgroundImage();\r\n\r\n  return (\r\n    <div\r\n      className=\"start-page-container\"\r\n      style={{\r\n        backgroundImage: `url(${backGroundImage})`,\r\n      }}\r\n    >\r\n      <div className=\"start-page-container__enter-block\">\r\n        <h1 className=\"start-page-container__title title\">\r\n          <span className=\"title__highlighted-one\">Br</span>eaking&nbsp;\r\n          <span className=\"title__highlighted-two\">Ba</span>d\r\n        </h1>\r\n        <button\r\n          onClick={onEnterButtonClickHandler}\r\n          className=\"start-page-container__button\"\r\n        >\r\n          Enter\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./HeaderNav.scss\";\r\n\r\nconst routes = [\r\n  { path: \"/random-character\", name: \"Random character\" },\r\n  { path: \"/all-characters\", name: \"All characters\" },\r\n  { path: \"/find-a-character\", name: \"Find a character\" },\r\n  { path: \"/episodes\", name: \"Episodes\" },\r\n  { path: \"/quotes\", name: \"Quotes\" },\r\n];\r\n\r\nconst HeaderNav = React.memo((prosp) => {\r\n  return (\r\n    <div className=\"header-nav-container\">\r\n      {routes.map((route, index) => {\r\n        const { path, name } = route;\r\n        return (\r\n          <NavLink\r\n            key={name + index}\r\n            to={path}\r\n            className=\"header-nav-container__nav-btn\"\r\n            activeClassName=\"active-nav-btn\"\r\n          >\r\n            {name}\r\n          </NavLink>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default HeaderNav;\r\n","import React from \"react\";\r\n\r\nimport \"./InformationAboutPortal.scss\";\r\n\r\nconst InformationAboutPortal = (props) => {\r\n  return (\r\n    <div className=\"information-container\">\r\n      <h1 className=\"information-container__title title\">\r\n        <span className=\"title__highlighted-one\">Br</span>eaking&nbsp;\r\n        <span className=\"title__highlighted-two\">Ba</span>d Fan&nbsp;\r\n        <span className=\"title__highlighted-three\">Po</span>rtal\r\n      </h1>\r\n      <p className=\"information-container__text\">\r\n        <span className=\"information-container__text--highlighted\">Story</span>:\r\n        \"A high school chemistry teacher diagnosed with inoperable lung cancer\r\n        turns to manufacturing and selling methamphetamine in order to secure\r\n        his family's future.\"\r\n      </p>\r\n      <p className=\"information-container__text\">\r\n        Here you can find information about characters, also episodes and\r\n        quotes. Also you can search some character by name and get some short\r\n        summary about the character.\r\n      </p>\r\n      <p className=\"information-container__text\">\r\n        Just click on menu buttons above to start.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InformationAboutPortal;\r\n","import React from \"react\";\r\n\r\nimport \"./Preloader.scss\";\r\n\r\nconst Preloader = (props) => {\r\n  return (\r\n    <div className=\"preloader-container\">\r\n      <div className=\"lds-roller\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport { getRandomCharacter } from \"./../../redux/reducers/app\";\r\n\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\n\r\nimport \"./RandomCharacter.scss\";\r\n\r\nconst RandomCharacter = React.memo((props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { randomCharacter, isRandomCharacterLoading } = useSelector(\r\n    ({ app }) => app\r\n  );\r\n\r\n  const onRandomCharacterButtonClickHandler = (params) => {\r\n    dispatch(getRandomCharacter());\r\n  };\r\n\r\n  const {\r\n    appearance,\r\n    img,\r\n    name,\r\n    nickname,\r\n    occupation,\r\n    portrayed,\r\n    status,\r\n  } = randomCharacter;\r\n\r\n  return (\r\n    <div className=\"random-character-container character\">\r\n      {isRandomCharacterLoading ? <Preloader /> : null}\r\n      {isRandomCharacterLoading ? null : (\r\n        <React.Fragment>\r\n          <Fade>\r\n            <div className=\"character__content-left\">\r\n              <p className=\"character__name\">\r\n                <span className=\"character__bold-text\">Name</span> {name}\r\n              </p>\r\n              <p className=\"character__nickname\">\r\n                <span className=\"character__bold-text\">Nickname</span>{\" \"}\r\n                {nickname}\r\n              </p>\r\n              <p className=\"character__occupation\">\r\n                <span className=\"character__bold-text\">Occupation</span>{\" \"}\r\n                {occupation !== null ? occupation.join(\", \") : `No information`}\r\n              </p>\r\n              <p className=\"character__portrayed\">\r\n                <span className=\"character__bold-text\">Portrayed</span>{\" \"}\r\n                {portrayed}\r\n              </p>\r\n              <p className=\"character__status\">\r\n                <span className=\"character__bold-text\">Status</span> {status}\r\n              </p>\r\n              <p className=\"character__appearance\">\r\n                <span className=\"character__bold-text\">\r\n                  Appearance in season\r\n                </span>{\" \"}\r\n                {appearance !== null ? appearance.join(\", \") : `No information`}\r\n              </p>\r\n              <button\r\n                onClick={onRandomCharacterButtonClickHandler}\r\n                className=\"character__random-character-btn\"\r\n                type=\"button\"\r\n              >\r\n                Random character\r\n              </button>\r\n              <br />\r\n            </div>\r\n            <div className=\"character__content-right\">\r\n              <div\r\n                className=\"character__photo\"\r\n                style={{\r\n                  backgroundImage: `url(${img})`,\r\n                }}\r\n              ></div>\r\n            </div>\r\n          </Fade>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nRandomCharacter.propTypes = {\r\n  randomCharacter: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      appearance: PropTypes.array.isRequired,\r\n      img: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      nickname: PropTypes.string.isRequired,\r\n      occupation: PropTypes.array.isRequired,\r\n      portrayed: PropTypes.string.isRequired,\r\n      status: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n\r\n  isRandomCharacterLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nRandomCharacter.defaultProps = {\r\n  randomCharacter: [\r\n    {\r\n      appearance: [],\r\n      img: ``,\r\n      name: ``,\r\n      nickname: ``,\r\n      occupation: [],\r\n      portrayed: ``,\r\n      status: ``,\r\n    },\r\n  ],\r\n\r\n  isRandomCharacterLoading: false,\r\n};\r\n\r\nexport default RandomCharacter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\n\r\nimport \"./AllCharacters.scss\";\r\n\r\nconst AllCharacters = (props) => {\r\n  const { allCharacters } = useSelector(({ app }) => app);\r\n\r\n  const [maxRange, setMaxRange] = React.useState(6);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const onLoadMoreBtnClickHandler = React.useCallback(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setMaxRange((prevRange) => prevRange + 6);\r\n      setIsLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const characterComponent = allCharacters\r\n    .slice(0, maxRange)\r\n    .map((character) => {\r\n      const {\r\n        appearance,\r\n        img,\r\n        name,\r\n        birthday,\r\n        nickname,\r\n        occupation,\r\n        portrayed,\r\n        status,\r\n        char_id,\r\n      } = character;\r\n\r\n      return (\r\n        <div key={char_id} className=\"characters-item\">\r\n          <div\r\n            className=\"characters-item__photo\"\r\n            style={{\r\n              backgroundImage: `url(${img})`,\r\n            }}\r\n          ></div>\r\n          <p className=\"characters-item__name\">\r\n            <span className=\"characters-item__bold-text\">Name</span> {name}\r\n          </p>\r\n          <p className=\"characters-item__birthday\">\r\n            <span className=\"characters-item__bold-text\">Birthday</span>{\" \"}\r\n            {birthday}\r\n          </p>\r\n          <p className=\"characters-item__nickname\">\r\n            <span className=\"character__bold-text\">Nickname</span> {nickname}\r\n          </p>\r\n          <p className=\"characters-item__occupation\">\r\n            <span className=\"characters-item__bold-text\">Occupation</span>{\" \"}\r\n            {occupation !== null ? occupation.join(\", \") : `No information`}\r\n          </p>\r\n          <p className=\"characters-item__portrayed\">\r\n            <span className=\"characters-item__bold-text\">Portrayed</span>{\" \"}\r\n            {portrayed}\r\n          </p>\r\n          <p className=\"characters-item__status\">\r\n            <span className=\"characters-item__bold-text\">Status</span> {status}\r\n          </p>\r\n          <p className=\"characters-item__appearance\">\r\n            <span className=\"characters-item__bold-text\">\r\n              Appearance in season\r\n            </span>{\" \"}\r\n            {appearance !== null ? appearance.join(\", \") : `No information`}\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"charcters-items\">{characterComponent}</section>\r\n      <section className=\"charcters-items__btn-block\">\r\n        {allCharacters.length >= maxRange ? (\r\n          <React.Fragment>\r\n            {isLoading ? (\r\n              <div className=\"charcters-items__preloader\">\r\n                <Preloader />\r\n              </div>\r\n            ) : (\r\n              <button\r\n                onClick={onLoadMoreBtnClickHandler}\r\n                className=\"charcters-items__load-more-btn\"\r\n                type=\"button\"\r\n              >\r\n                Load more characters\r\n              </button>\r\n            )}\r\n          </React.Fragment>\r\n        ) : (\r\n          <br />\r\n        )}\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nAllCharacters.propTypes = {\r\n  allCharacters: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      appearance: PropTypes.array.isRequired,\r\n      img: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      birthday: PropTypes.number.isRequired,\r\n      nickname: PropTypes.string.isRequired,\r\n      occupation: PropTypes.array.isRequired,\r\n      portrayed: PropTypes.string.isRequired,\r\n      status: PropTypes.string.isRequired,\r\n      char_id: PropTypes.number.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n\r\nAllCharacters.defaultProps = {\r\n  allCharacters: [\r\n    {\r\n      appearance: [],\r\n      img: ``,\r\n      name: ``,\r\n      birthday: 0,\r\n      nickname: ``,\r\n      occupation: [],\r\n      portrayed: ``,\r\n      status: ``,\r\n      char_id: 0,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default AllCharacters;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport \"./SearchResult.scss\";\r\n\r\nconst SearchResult = React.memo((props) => {\r\n  const [showMoreInfo, setShowMoreInfo] = React.useState(false);\r\n  const nodeRef = React.useRef(null);\r\n\r\n  const onShowMoreBtnClickHandler = () => {\r\n    setShowMoreInfo(!showMoreInfo);\r\n  };\r\n\r\n  const {\r\n    appearance,\r\n    img,\r\n    name,\r\n    birthday,\r\n    nickname,\r\n    occupation,\r\n    portrayed,\r\n    status,\r\n    char_id,\r\n  } = props.character;\r\n\r\n  const classesTransition = {\r\n    enter: \"enter\",\r\n    enterActive: \"enter-active\",\r\n    exit: \"exit\",\r\n    exitActive: \"exit-active\",\r\n    exitDone: \"exit-done\",\r\n  };\r\n\r\n  return (\r\n    <Fade cascade>\r\n      <div className=\"search-result-container search-result\">\r\n        <div key={char_id} className=\"search-result__item\">\r\n          <div\r\n            className=\"search-result__photo\"\r\n            style={{\r\n              backgroundImage: `url(${img})`,\r\n            }}\r\n          ></div>\r\n          <p className=\"search-result__name\">\r\n            <span className=\"search-result__bold-text\">Name</span> {name}\r\n          </p>\r\n\r\n          <button\r\n            onClick={onShowMoreBtnClickHandler}\r\n            className=\"search-result__more-info-btn\"\r\n          >\r\n            {showMoreInfo ? `Hide` : `Show more`}\r\n          </button>\r\n          <CSSTransition\r\n            nodeRef={nodeRef}\r\n            in={showMoreInfo}\r\n            timeout={500}\r\n            classNames={classesTransition}\r\n            unmountOnExit\r\n            mountOnEnter\r\n          >\r\n            <div ref={nodeRef} className=\"search-result__container-more\">\r\n              <p className=\"search-result__birthday\">\r\n                <span className=\"search-result__bold-text\">Birthday</span>{\" \"}\r\n                {birthday}\r\n              </p>\r\n              <p className=\"search-result__nickname\">\r\n                <span className=\"character__bold-text\">Nickname</span>{\" \"}\r\n                {nickname}\r\n              </p>\r\n              <p className=\"search-result__occupation\">\r\n                <span className=\"search-result__bold-text\">Occupation</span>{\" \"}\r\n                {occupation !== null ? occupation.join(\", \") : `No information`}\r\n              </p>\r\n              <p className=\"search-result__portrayed\">\r\n                <span className=\"search-result__bold-text\">Portrayed</span>{\" \"}\r\n                {portrayed}\r\n              </p>\r\n              <p className=\"search-result__status\">\r\n                <span className=\"search-result__bold-text\">Status</span>{\" \"}\r\n                {status}\r\n              </p>\r\n              <p className=\"search-result__appearance\">\r\n                <span className=\"search-result__bold-text\">\r\n                  Appearance in season\r\n                </span>{\" \"}\r\n                {appearance !== null ? appearance.join(\", \") : `No information`}\r\n              </p>\r\n            </div>\r\n          </CSSTransition>\r\n        </div>\r\n      </div>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nSearchResult.propTypes = {\r\n  appearance: PropTypes.array.isRequired,\r\n  img: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  birthday: PropTypes.number.isRequired,\r\n  nickname: PropTypes.string.isRequired,\r\n  occupation: PropTypes.array.isRequired,\r\n  portrayed: PropTypes.string.isRequired,\r\n  status: PropTypes.string.isRequired,\r\n  char_id: PropTypes.number.isRequired,\r\n};\r\n\r\nSearchResult.defaultProps = {\r\n  appearance: [],\r\n  img: ``,\r\n  name: ``,\r\n  birthday: 0,\r\n  nickname: ``,\r\n  occupation: [],\r\n  portrayed: ``,\r\n  status: ``,\r\n  char_id: 0,\r\n};\r\n\r\nexport default SearchResult;\r\n","import React from \"react\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nimport \"./NothingFound.scss\";\r\n\r\nconst NothingFound = React.memo((props) => {\r\n  return (\r\n    <Fade>\r\n      <div className=\"nothing-found-container nothing-found\">\r\n        <h1 className=\"nothing-found__title\">\r\n          Nothing matches your search. Try to change the request.\r\n        </h1>\r\n        <div className=\"nothing-found__image\"></div>\r\n      </div>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default NothingFound;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getSearchedCharacter } from \"./../../redux/reducers/app\";\r\n\r\nimport SearchResult from \"./../SearchResult/SearchResult\";\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\nimport NothingFound from \"../UI/NothingFound/NothingFound\";\r\n\r\nimport \"./FindACharacter.scss\";\r\n\r\nconst FindACharacter = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { searchedCharacter, isSearching } = useSelector(({ app }) => app);\r\n  const [searchedCharacterItem, setSearchedCharacter] = React.useState(``);\r\n  const [disabled, setDisabled] = React.useState(true);\r\n\r\n  const onInputFiledChangeHandler = (e) => {\r\n    setSearchedCharacter(e.target.value.trim());\r\n\r\n    if (e.target.value.trim().length === 0) {\r\n      setDisabled(true);\r\n    }\r\n\r\n    if (e.target.value.trim().length !== 0) {\r\n      setDisabled(false);\r\n    }\r\n  };\r\n\r\n  const onSearchButtonClickHander = () => {\r\n    dispatch(getSearchedCharacter(searchedCharacterItem));\r\n    setSearchedCharacter(``);\r\n    setDisabled(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"find-a-character-container\">\r\n      <section className=\"find-a-character-container__input-field input-field\">\r\n        <input\r\n          onChange={(e) => onInputFiledChangeHandler(e)}\r\n          value={searchedCharacterItem}\r\n          type=\"text\"\r\n          className=\"input-field__input\"\r\n          placeholder=\"Walter...\"\r\n        />\r\n        <button\r\n          onClick={onSearchButtonClickHander}\r\n          type=\"button\"\r\n          className=\"input-field__search-btn\"\r\n          disabled={disabled}\r\n        >\r\n          Search\r\n        </button>\r\n      </section>\r\n\r\n      {isSearching ? (\r\n        <div className=\"find-a-character-container__preloader\">\r\n          <Preloader />\r\n        </div>\r\n      ) : null}\r\n\r\n      {searchedCharacter !== null ? (\r\n        <>\r\n          {searchedCharacter.length === 0 && !isSearching ? (\r\n            <NothingFound />\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n\r\n      {searchedCharacter !== null ? (\r\n        <>\r\n          {searchedCharacter.length !== 0 && !isSearching ? (\r\n            <section className=\"find-a-character-container__result result\">\r\n              {searchedCharacter.map((character) => (\r\n                <SearchResult key={character.char_id} character={character} />\r\n              ))}\r\n            </section>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nFindACharacter.propTypes = {\r\n  searchedCharacter: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      appearance: PropTypes.array.isRequired,\r\n      img: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      birthday: PropTypes.number.isRequired,\r\n      nickname: PropTypes.string.isRequired,\r\n      occupation: PropTypes.array.isRequired,\r\n      portrayed: PropTypes.string.isRequired,\r\n      status: PropTypes.string.isRequired,\r\n      char_id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n\r\n  isSearching: PropTypes.bool.isRequired,\r\n};\r\n\r\nFindACharacter.defaultProps = {\r\n  searchedCharacter: [\r\n    {\r\n      appearance: [],\r\n      img: ``,\r\n      name: ``,\r\n      birthday: 0,\r\n      nickname: ``,\r\n      occupation: [],\r\n      portrayed: ``,\r\n      status: ``,\r\n      char_id: 0,\r\n    },\r\n  ],\r\n\r\n  isSearching: false,\r\n};\r\n\r\nexport default FindACharacter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\n\r\nimport \"./Episodes.scss\";\r\n\r\nconst Episodes = (props) => {\r\n  const { allEpisodes } = useSelector(({ app }) => app);\r\n\r\n  const [maxRange, setMaxRange] = React.useState(9);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const onLoadMoreBtnClickHandler = React.useCallback(() => {\r\n    setIsLoading(true);\r\n    setTimeout(() => {\r\n      setMaxRange((prevRange) => prevRange + 6);\r\n      setIsLoading(false);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const episodesComponent = allEpisodes\r\n    .slice(0, maxRange)\r\n    .map((episodeItem) => {\r\n      const {\r\n        title,\r\n        air_date,\r\n        episode,\r\n        season,\r\n        characters,\r\n        episode_id,\r\n      } = episodeItem;\r\n\r\n      return (\r\n        <section key={episode_id} className=\"episode__item\">\r\n          <p className=\"episode__episode-num\">\r\n            <span className=\"episode__bold-text\">Episode</span> {episode}\r\n          </p>\r\n          <p className=\"episode__season\">\r\n            <span className=\"episode__bold-text\">Season</span> {season}\r\n          </p>\r\n          <p className=\"episode__title\">\r\n            <span className=\"episode__bold-text\">Title</span> {title}\r\n          </p>\r\n          <p className=\"episode__air-date\">\r\n            <span className=\"episode__bold-text\">Air date</span> {air_date}\r\n          </p>\r\n          <p className=\"episode__characters\">\r\n            <span className=\"episode__bold-text\">Characters</span>{\" \"}\r\n            {characters !== null ? characters.join(\", \") : `No information`}\r\n          </p>\r\n        </section>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"episode-container episode\">{episodesComponent}</div>\r\n      <div className=\"episode-container__btn-block\">\r\n        {allEpisodes.length >= maxRange ? (\r\n          <React.Fragment>\r\n            {isLoading ? (\r\n              <div className=\"episode-container__preloader\">\r\n                <Preloader />\r\n              </div>\r\n            ) : (\r\n              <button\r\n                onClick={onLoadMoreBtnClickHandler}\r\n                className=\"episode-container__load-more-btn\"\r\n                type=\"button\"\r\n              >\r\n                Load more episodes\r\n              </button>\r\n            )}\r\n          </React.Fragment>\r\n        ) : (\r\n          <br />\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nEpisodes.propTypes = {\r\n  allEpisodes: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      air_date: PropTypes.string.isRequired,\r\n      episode: PropTypes.string.isRequired,\r\n      season: PropTypes.string.isRequired,\r\n      characters: PropTypes.array.isRequired,\r\n      episode_id: PropTypes.number.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n\r\nEpisodes.defaultProps = {\r\n  allEpisodes: [\r\n    {\r\n      title: ``,\r\n      air_date: ``,\r\n      episode: ``,\r\n      season: ``,\r\n      characters: [],\r\n      episode_id: 0,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Episodes;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getFilteredQuotesAC,\r\n  setActiveFilterButtonIndexAC,\r\n  setAllQuotesAC,\r\n} from \"./../../redux/actions/actions\";\r\n\r\nimport \"./QuotesFilter.scss\";\r\n\r\nconst QuotesFilter = React.memo((props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { activeFilterButtonIndex } = useSelector(({ app }) => app);\r\n\r\n  const onAllQuotesClickHandler = () => {\r\n    dispatch(setActiveFilterButtonIndexAC(0));\r\n    dispatch(setAllQuotesAC());\r\n  };\r\n\r\n  const onFilterButtonClickHandler = (index, character) => {\r\n    dispatch(setActiveFilterButtonIndexAC(index));\r\n    dispatch(getFilteredQuotesAC(character));\r\n  };\r\n\r\n  const { authorsOfQuotes } = props;\r\n\r\n  return (\r\n    <div className=\"quotes-filter-container\">\r\n      <button\r\n        onClick={onAllQuotesClickHandler}\r\n        className={`quotes-filter-container__filter-btn ${\r\n          activeFilterButtonIndex === 0 ? `active-filter-btn` : null\r\n        }`}\r\n        type=\"button\"\r\n        disabled={activeFilterButtonIndex === 0}\r\n      >\r\n        All quotes\r\n      </button>\r\n      {authorsOfQuotes.map((author, index) => (\r\n        <button\r\n          onClick={() => onFilterButtonClickHandler(index + 1, author)}\r\n          key={author + index}\r\n          className={`quotes-filter-container__filter-btn ${\r\n            activeFilterButtonIndex === index + 1 ? `active-filter-btn` : null\r\n          }`}\r\n          type=\"button\"\r\n          disabled={activeFilterButtonIndex === index + 1}\r\n        >\r\n          {author}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nQuotesFilter.propTypes = {\r\n  activeFilterButtonIndex: PropTypes.number.isRequired,\r\n  authorsOfQuotes: PropTypes.array.isRequired,\r\n};\r\n\r\nQuotesFilter.defaultProps = {\r\n  activeFilterButtonIndex: 0,\r\n  authorsOfQuotes: [],\r\n};\r\n\r\nexport default QuotesFilter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\n\r\nimport { getRandomQuote } from \"./../../redux/reducers/app\";\r\n\r\nimport QuotesFilter from \"./../QuotesFilter/QuotesFilter\";\r\n\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\n\r\nimport \"./Quotes.scss\";\r\n\r\nconst Quotes = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    randomQuote,\r\n    isRandomQuoteLoading,\r\n    quotes,\r\n    filteredQuotes,\r\n  } = useSelector(({ app }) => app);\r\n\r\n  const onGetRandomQuoteClickHandler = () => {\r\n    dispatch(getRandomQuote());\r\n  };\r\n\r\n  const { quote, author } = randomQuote[0];\r\n\r\n  const authorsOfQuotes = [\r\n    ...new Set(quotes.map((quoteItem) => quoteItem.author)),\r\n  ];\r\n\r\n  const getQuotes = (quotes, filteredQuotes) => {\r\n    if (filteredQuotes.length === 0) {\r\n      return quotes;\r\n    } else {\r\n      return filteredQuotes;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quotes-container quotes\">\r\n      <section className=\"quotes__left random-quote\">\r\n        <p className=\"random-quote__title\">\r\n          <span className=\"random-quote__title-one\">Ra</span>ndom quote.\r\n        </p>\r\n        {isRandomQuoteLoading ? (\r\n          <Preloader />\r\n        ) : (\r\n          <Zoom>\r\n            <figure className=\"random-quote__body\">\r\n              <blockquote lang=\"en\" className=\"random-quote__text\">\r\n                <q>{quote}</q>\r\n              </blockquote>\r\n              <figcaption className=\"random-quote__author\">\r\n                &mdash; {author}\r\n              </figcaption>\r\n            </figure>\r\n          </Zoom>\r\n        )}\r\n\r\n        <button\r\n          onClick={onGetRandomQuoteClickHandler}\r\n          className=\"random-quote__get-quote-btn\"\r\n          type=\"button\"\r\n        >\r\n          Get random quote\r\n        </button>\r\n      </section>\r\n      <section className=\"quotes__right quote-item\">\r\n        <QuotesFilter authorsOfQuotes={authorsOfQuotes} />\r\n\r\n        <div className=\"quote-item__quote-block quote-block\">\r\n          {getQuotes(quotes, filteredQuotes).map((quoteItem) => {\r\n            const { quote_id, quote, author } = quoteItem;\r\n            return (\r\n              <Fade key={quote_id} cascade>\r\n                <div className=\"quote-block__body\">\r\n                  <blockquote lang=\"en\" className=\"quote-block__text\">\r\n                    <q>{quote}</q>\r\n                  </blockquote>\r\n                  <figcaption className=\"quote-block__author\">\r\n                    &mdash; {author}\r\n                  </figcaption>\r\n                </div>\r\n              </Fade>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nQuotes.propTypes = {\r\n  randomQuote: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      quote_id: PropTypes.number.isRequired,\r\n      quote: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n\r\n  isRandomQuoteLoading: PropTypes.bool.isRequired,\r\n\r\n  quotes: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      quote_id: PropTypes.number.isRequired,\r\n      quote: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n\r\n  filteredQuotes: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      quote_id: PropTypes.number.isRequired,\r\n      quote: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n\r\nQuotes.defaultProps = {\r\n  randomQuote: [\r\n    {\r\n      quote_id: 0,\r\n      quote: ``,\r\n      author: ``,\r\n    },\r\n  ],\r\n\r\n  isRandomQuoteLoading: false,\r\n\r\n  quotes: [\r\n    {\r\n      quote_id: 0,\r\n      quote: ``,\r\n      author: ``,\r\n    },\r\n  ],\r\n\r\n  filteredQuotes: [\r\n    {\r\n      quote_id: 0,\r\n      quote: ``,\r\n      author: ``,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default Quotes;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport HeaderNav from \"./../HeaderNav/HeaderNav\";\r\nimport InformationAboutPortal from \"./../InformationAboutPortal/InformationAboutPortal\";\r\nimport RandomCharacter from \"./../RandomCharacter/RandomCharacter\";\r\nimport AllCharacters from \"./../AllCharacters/AllCharacters\";\r\nimport FindACharacter from \"./../FindACharacter/FindACharacter\";\r\nimport Episodes from \"./../Episodes/Episodes\";\r\nimport Quotes from \"./../Quotes/Quotes\";\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\n\r\nimport \"./MainPage.scss\";\r\n\r\nconst MainPage = (props) => {\r\n  const { isStartDataLoading } = useSelector(({ app }) => app);\r\n  return (\r\n    <div className=\"main-page-container\">\r\n      {isStartDataLoading ? (\r\n        <div className=\"main-page-container__preloader-block\">\r\n          <Preloader />\r\n        </div>\r\n      ) : (\r\n        <HeaderNav />\r\n      )}\r\n\r\n      <Switch>\r\n        <Redirect\r\n          exact\r\n          from=\"/\"\r\n          to=\"/information-about-portal\"\r\n          component={InformationAboutPortal}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/information-about-portal\"\r\n          component={InformationAboutPortal}\r\n        />\r\n\r\n        <Route exact path=\"/random-character\" component={RandomCharacter} />\r\n        <Route exact path=\"/all-characters\" component={AllCharacters} />\r\n        <Route exact path=\"/find-a-character\" component={FindACharacter} />\r\n        <Route exact path=\"/episodes\" component={Episodes} />\r\n        <Route exact path=\"/quotes\" component={Quotes} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainPage.propTypes = {\r\n  isStartDataLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nMainPage.defaultProps = {\r\n  isStartDataLoading: false,\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\n\r\nimport \"./WarningPage.scss\";\r\n\r\nexport const WarningPage = (props) => {\r\n  return (\r\n    <div className=\"warning-page-container\">\r\n      <h1 className=\"warning-page-container__title\">\r\n        Please open this website on a desktop/laptop.\r\n      </h1>\r\n      <p className=\"warning-page-container__text\">\r\n        Thanks for your comprehension.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/gif-1.035ae837.gif\";","import React from \"react\";\r\n\r\nimport gifErrorPage from \"../../../assets/images-error-page/gif-1.gif\";\r\n\r\nimport \"./ErrorPage.scss\";\r\n\r\nconst ErrorPage = (props) => {\r\n  return (\r\n    <div className=\"error-page-container\">\r\n      <h1 className=\"error-page-container__title\">Something has gone wrong.</h1>\r\n      <img\r\n        className=\"error-page-container__image\"\r\n        src={gifErrorPage}\r\n        alt=\"error gif\"\r\n      />\r\n      <p className=\"error-page-container__text\">\r\n        Refresh the page and try again.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useSelector } from \"react-redux\";\n\nimport StartPage from \"./../StartPage/StartPage\";\nimport MainPage from \"./../MainPage/MainPage\";\nimport { WarningPage } from \"../WarningPage/WarningPage\";\nimport ErrorPage from \"../UI/ErrorPage/ErrorPage\";\n\nimport \"./App.scss\";\n\nconst App = (props) => {\n  const { isStartPageClicked, isErrorOccured } = useSelector(({ app }) => app);\n\n  const widthOfTheScreen =\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    document.body.clientWidth;\n\n  return (\n    <div className=\"app-container\">\n      {isErrorOccured ? (\n        <ErrorPage />\n      ) : (\n        <>\n          {widthOfTheScreen >= 1024 ? (\n            <React.Fragment>\n              {isStartPageClicked ? <MainPage /> : <StartPage />}\n            </React.Fragment>\n          ) : (\n            <WarningPage />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nApp.propTypes = {\n  isStartPageClicked: PropTypes.bool.isRequired,\n};\n\nApp.defaultProps = {\n  isStartPageClicked: false,\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport { HashRouter } from \"react-router-dom\";\n\nimport store from \"./redux/store\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport App from \"./components/App/App\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <HashRouter>\n    <React.Fragment>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.Fragment>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}